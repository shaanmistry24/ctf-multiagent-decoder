def rol(byte, shift):
    byte &= 0xFF
    return ((byte << shift) & 0xFF) | (byte >> (8 - shift))

def ror(byte, shift):
    byte &= 0xFF
    return (byte >> shift) | ((byte << (8 - shift)) & 0xFF)

def decode(byte, index):
    rotated_left = rol(byte, index % 8)
    masked = (rotated_left & 0xF0) | ((~rotated_left) & 0x0F)
    subtracted = (masked - 42) & 0xFF
    rotated_right = ror(subtracted, (index + 3) % 7)
    return rotated_right ^ ((index * 37) & 0xFF)

obfuscated_bytes = [0x32,0xc0,0xbf,0x6c,0x61,0x85,0x5c,0xe4,0x40,0xd0,0x8f,0xa2,0xef,0x7c,0x4a,0x2,
                    0x4,0x9f,0x37,0x18,0x68,0x97,0x39,0x33,0xbe,0xf1,0x20,0xf1,0x40,0x83,0x6,0x7e,
                    0xf1,0x46,0xa6,0x47,0xfe,0xc3,0xc8,0x67,0x4,0x4d,0xba,0x10,0x9b,0x33]
flag_characters = []

for i in range(len(obfuscated_bytes)):
    decoded_byte = decode(obfuscated_bytes[i], i)
    flag_characters.append(chr(decoded_byte))
    
flag = ''.join(flag_characters)

print('The flag is:', flag)